<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jian.dao.JdPersonsMapper">
  <resultMap id="BaseResultMap" type="com.jian.entity.JdPersons">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="action" jdbcType="INTEGER" property="action" />
    <result column="device_seril" jdbcType="VARCHAR" property="deviceSeril" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="invalid_time" jdbcType="TIMESTAMP" property="invalidTime" />
    <result column="person_type" jdbcType="INTEGER" property="personType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jian.entity.JdPersons">
    <result column="photo_feature" jdbcType="LONGVARBINARY" property="photoFeature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, id_card, name, photo, version, action, device_seril, reg_time, invalid_time, 
    person_type
  </sql>
  <sql id="Blob_Column_List">
    photo_feature
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jian.entity.JdPersonsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jian.entity.JdPersonsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jd_persons
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from jd_persons
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jian.entity.JdPersonsExample">
    delete from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jian.entity.JdPersons">
    insert into jd_persons (uuid, id_card, name, 
      photo, version, action, 
      device_seril, reg_time, invalid_time, 
      person_type, photo_feature)
    values (#{uuid,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, #{action,jdbcType=INTEGER}, 
      #{deviceSeril,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, #{invalidTime,jdbcType=TIMESTAMP}, 
      #{personType,jdbcType=INTEGER}, #{photoFeature,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.jian.entity.JdPersons">
    insert into jd_persons
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="deviceSeril != null">
        device_seril,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="invalidTime != null">
        invalid_time,
      </if>
      <if test="personType != null">
        person_type,
      </if>
      <if test="photoFeature != null">
        photo_feature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="action != null">
        #{action,jdbcType=INTEGER},
      </if>
      <if test="deviceSeril != null">
        #{deviceSeril,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidTime != null">
        #{invalidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personType != null">
        #{personType,jdbcType=INTEGER},
      </if>
      <if test="photoFeature != null">
        #{photoFeature,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jian.entity.JdPersonsExample" resultType="java.lang.Long">
    select count(*) from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jd_persons
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=INTEGER},
      </if>
      <if test="record.deviceSeril != null">
        device_seril = #{record.deviceSeril,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalidTime != null">
        invalid_time = #{record.invalidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personType != null">
        person_type = #{record.personType,jdbcType=INTEGER},
      </if>
      <if test="record.photoFeature != null">
        photo_feature = #{record.photoFeature,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update jd_persons
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      action = #{record.action,jdbcType=INTEGER},
      device_seril = #{record.deviceSeril,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      invalid_time = #{record.invalidTime,jdbcType=TIMESTAMP},
      person_type = #{record.personType,jdbcType=INTEGER},
      photo_feature = #{record.photoFeature,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jd_persons
    set uuid = #{record.uuid,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=BIGINT},
      action = #{record.action,jdbcType=INTEGER},
      device_seril = #{record.deviceSeril,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      invalid_time = #{record.invalidTime,jdbcType=TIMESTAMP},
      person_type = #{record.personType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jian.entity.JdPersons">
    update jd_persons
    <set>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=INTEGER},
      </if>
      <if test="deviceSeril != null">
        device_seril = #{deviceSeril,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidTime != null">
        invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="personType != null">
        person_type = #{personType,jdbcType=INTEGER},
      </if>
      <if test="photoFeature != null">
        photo_feature = #{photoFeature,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jian.entity.JdPersons">
    update jd_persons
    set id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      action = #{action,jdbcType=INTEGER},
      device_seril = #{deviceSeril,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      person_type = #{personType,jdbcType=INTEGER},
      photo_feature = #{photoFeature,jdbcType=LONGVARBINARY}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jian.entity.JdPersons">
    update jd_persons
    set id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      version = #{version,jdbcType=BIGINT},
      action = #{action,jdbcType=INTEGER},
      device_seril = #{deviceSeril,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      invalid_time = #{invalidTime,jdbcType=TIMESTAMP},
      person_type = #{personType,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.jian.entity.JdPersonsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.jian.entity.JdPersonsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jd_persons
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>